# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'lt'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    # Form Type Extensions
    App\Form\Extension\ProfileFormTypeExtension:
        tags:
            - { name: form.type_extension, extended_type: FOS\UserBundle\Form\Type\ProfileFormType }

    App\Form\Extension\RegistrationFormTypeExtension:
        tags:
            - { name: form.type_extension, extended_type: FOS\UserBundle\Form\Type\RegistrationFormType }
    # End of Form Type Extensions

 # Sonata admin bundle configuration
    admin.user:
        class: App\Admin\UserAdmin
        arguments: [~, App\Entity\User, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Naudotojai }
        public: true

    admin.server_visit:
        class: App\Admin\ServerVisitAdmin
        arguments: [~, App\Entity\ServerVisit, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Svečių apsilankymai }
        public: true

    admin.user_visits:
        class: App\Admin\UserVisitsAdmin
        arguments: [~, App\Entity\User, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Naudotojų apsilankymai }
        public: true
    # End of Sonata admin bundle configuration



# Event subscriber configuration
    app_administration.request:
        class: App\EventSubscriber\RequestSubscriber
        tags:
            - { name: kernel.event_subscriber }

# Event subscriber configuration

# Service configuration
    app_administration.visit_tracker:
        class: App\Service\VisitTracker
# Service configuration